/**
 * Write a description of class OompaLoompa here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
public class OompaLoompa implements Comparable
{
    private int height;
    private String name;
    private double shoeSize;
    OompaLoompa(String name,int height,double ShoeSize)
    {
        this.height=height;
        this.name=name;
        this.shoeSize=ShoeSize;
    }

    public int getHeight()
    {
        return height;
    }

    public String getName()
    {
        return name;
    }

    public double getShoeSize()
    {
        return shoeSize;
    }

    public String toString()
    {
        return "OompaLoompa: "+getName() ;
    }

    public int compareTo(Object x)
    {
        OompaLoompa that=(OompaLoompa) x;
        if(this.name.compareTo(that.name)!=0)
            return this.name.compareTo(that.name);
        else if(this.height-that.height!=0)
            return this.height-that.height;
        else
            return (int)(this.shoeSize-that.shoeSize);
    }

    public static void main(String [] args)
    {
        OompaLoompa jerry=new OompaLoompa("Jerry",1,5.5);
        OompaLoompa george=new OompaLoompa("George",7,2.5);
        OompaLoompa george2=new OompaLoompa("George",7,2);

        //Test comparing by height first, then by name, then by shoe size
        System.out.println(jerry.compareTo(george));
        //shoule be -1
        System.out.println(george.compareTo(george2));
        //should be ___?

        //Test comparing by name first, then by height, then by shoe size
        System.out.println(jerry.compareTo(george));
        //should be 1
        System.out.println(george2.compareTo(george));
        //shoule be -1
    }
}
